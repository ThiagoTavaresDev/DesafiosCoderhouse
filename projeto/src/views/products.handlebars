<html>
<head>
    <title>Products</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <h1>Products</h1>
        
        <!-- Filters -->
        <div class="row mb-4">
            <div class="col-md-3">
                <select id="sortSelect" class="form-select">
                    <option value="">Sort by price</option>
                    <option value="asc">Price: Low to High</option>
                    <option value="desc">Price: High to Low</option>
                </select>
            </div>
            <div class="col-md-3">
                <select id="categoryFilter" class="form-select">
                    <option value="">All Categories</option>
                    {{#each categories}}
                        <option value="{{this}}">{{this}}</option>
                    {{/each}}
                </select>
            </div>
            <div class="col-md-3">
                <select id="availabilityFilter" class="form-select">
                    <option value="">Availability</option>
                    <option value="true">In Stock</option>
                    <option value="false">Out of Stock</option>
                </select>
            </div>
        </div>

        <!-- Products Grid -->
        <div class="row" id="productsContainer">
            {{#each products}}
            <div class="col-md-4 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">{{this.title}}</h5>
                        <p class="card-text">{{this.description}}</p>
                        <p class="card-text">Price: ${{this.price}}</p>
                        <p class="card-text">Stock: {{this.stock}}</p>
                        <p class="card-text">Category: {{this.category}}</p>
                        <button class="btn btn-primary add-to-cart" data-product-id="{{this._id}}">Add to Cart</button>
                    </div>
                </div>
            </div>
            {{/each}}
        </div>

        <!-- Pagination -->
        <nav class="mt-4">
            <ul class="pagination justify-content-center">
                {{#if hasPrevPage}}
                    <li class="page-item">
                        <a class="page-link" href="{{prevLink}}">Previous</a>
                    </li>
                {{/if}}
                <li class="page-item active">
                    <span class="page-link">{{page}}</span>
                </li>
                {{#if hasNextPage}}
                    <li class="page-item">
                        <a class="page-link" href="{{nextLink}}">Next</a>
                    </li>
                {{/if}}
            </ul>
        </nav>
    </div>

    <script>
        // Handle filters and sorting
        document.getElementById('sortSelect').addEventListener('change', updateProducts);
        document.getElementById('categoryFilter').addEventListener('change', updateProducts);
        document.getElementById('availabilityFilter').addEventListener('change', updateProducts);

        function updateProducts() {
            const sort = document.getElementById('sortSelect').value;
            const category = document.getElementById('categoryFilter').value;
            const available = document.getElementById('availabilityFilter').value;
            
            let query = '';
            if (category) query = `category:${category}`;
            if (available) query = `available:${available}`;

            const url = new URL(window.location.href);
            if (sort) url.searchParams.set('sort', sort);
            if (query) url.searchParams.set('query', query);
            
            window.location.href = url.toString();
        }

        // Handle add to cart
        document.querySelectorAll('.add-to-cart').forEach(button => {
            button.addEventListener('click', async (e) => {
                const productId = e.target.dataset.productId;
                try {
                    // Get cart ID from localStorage or create new cart
                    let cartId = localStorage.getItem('cartId');
                    if (!cartId) {
                        const response = await fetch('/api/carts', { method: 'POST' });
                        const data = await response.json();
                        cartId = data.payload._id;
                        localStorage.setItem('cartId', cartId);
                    }

                    // Add product to cart
                    const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ quantity: 1 })
                    });

                    if (response.ok) {
                        alert('Product added to cart!');
                    } else {
                        throw new Error('Failed to add product to cart');
                    }
                } catch (error) {
                    alert('Error adding product to cart: ' + error.message);
                }
            });
        });
    </script>
</body>
</html>
