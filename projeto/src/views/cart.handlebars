<html>
<head>
    <title>Shopping Cart</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <h1>Shopping Cart</h1>
        
        {{#if cart.products.length}}
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Price</th>
                            <th>Quantity</th>
                            <th>Total</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {{#each cart.products}}
                        <tr>
                            <td>{{this.productId.title}}</td>
                            <td>${{this.productId.price}}</td>
                            <td>
                                <input type="number" 
                                       class="form-control quantity-input" 
                                       value="{{this.quantity}}" 
                                       min="1"
                                       data-product-id="{{this.productId._id}}"
                                       style="width: 80px">
                            </td>
                            <td>${{multiply this.productId.price this.quantity}}</td>
                            <td>
                                <button class="btn btn-danger btn-sm remove-product" 
                                        data-product-id="{{this.productId._id}}">
                                    Remove
                                </button>
                            </td>
                        </tr>
                        {{/each}}
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="3" class="text-end"><strong>Total:</strong></td>
                            <td colspan="2"><strong>${{cartTotal}}</strong></td>
                        </tr>
                    </tfoot>
                </table>
            </div>

            <div class="d-flex justify-content-between mt-4">
                <a href="/products" class="btn btn-secondary">Continue Shopping</a>
                <button id="clearCart" class="btn btn-danger">Clear Cart</button>
            </div>
        {{else}}
            <div class="text-center mt-5">
                <h3>Your cart is empty</h3>
                <a href="/products" class="btn btn-primary mt-3">Go Shopping</a>
            </div>
        {{/if}}
    </div>

    <script>
        const cartId = '{{cart._id}}';

        // Update quantity
        document.querySelectorAll('.quantity-input').forEach(input => {
            input.addEventListener('change', async (e) => {
                const quantity = parseInt(e.target.value);
                const productId = e.target.dataset.productId;
                
                try {
                    const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ quantity })
                    });

                    if (!response.ok) throw new Error('Failed to update quantity');
                    location.reload();
                } catch (error) {
                    alert('Error updating quantity: ' + error.message);
                }
            });
        });

        // Remove product
        document.querySelectorAll('.remove-product').forEach(button => {
            button.addEventListener('click', async (e) => {
                const productId = e.target.dataset.productId;
                
                try {
                    const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
                        method: 'DELETE'
                    });

                    if (!response.ok) throw new Error('Failed to remove product');
                    location.reload();
                } catch (error) {
                    alert('Error removing product: ' + error.message);
                }
            });
        });

        // Clear cart
        document.getElementById('clearCart').addEventListener('click', async () => {
            if (!confirm('Are you sure you want to clear your cart?')) return;
            
            try {
                const response = await fetch(`/api/carts/${cartId}`, {
                    method: 'DELETE'
                });

                if (!response.ok) throw new Error('Failed to clear cart');
                location.reload();
            } catch (error) {
                alert('Error clearing cart: ' + error.message);
            }
        });
    </script>
</body>
</html>
